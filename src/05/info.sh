#!/bin/bash

hostname=$(hostname)

# Общее число папок, включая вложенные

total_folders=$(find "$1" -mindepth 1 -type d 2>/dev/null | wc -l)

# Топ 5 папок с самым большим весом в порядке убывания (путь и размер)

top_folders=$(du $1 -h 2>/dev/null | sort -hr | head -n 6 | tail -n +2 | awk '{ print $2 }')

# Общее число файлов
number_files=$(find "$1" -mindepth 1 -type f 2>/dev/null | wc -l)

# Число конфигурационных файлов (с расширением .conf)
configuration_files=$(find "$1" -mindepth 1 -type f -name "*.conf" 2>/dev/null | wc -l)

# текстовых файлов
text_files=$(find "$1" -mindepth 1 -type f 2>/dev/null -exec file {} \; | grep -c "text")

#исполняемых файлов
executable_files=$(find "$1" -mindepth 1 -type f 2>/dev/null -exec file {} \; | grep -c "executable")

#логов (файлов с расширением .log)
log_files=$(find "$1" -mindepth 1 -type f  -name "*.log" 2>/dev/null | wc -l)

#архивов
archive_files=$(find "$1" -mindepth 1 -type f \( -name "*.zip" -o -name "*.tar" -o -name "*.gz" \) 2>/dev/null -exec file {} \; | wc -l)

#символических ссылок
symbolic_links=$(find "$1" -mindepth 1 -type l 2>/dev/null | wc -l)

# Топ 10 файлов с самым большим весом в порядке убывания (путь, размер и тип)
top_files=$(find $1 -type f 2>/dev/null -exec du -ah {} + | sort -rh | head -n 10 | awk '{print $2}')

# Топ 10 исполняемых файлов с самым большим весом в порядке убывания (путь, размер и хеш)
top_executables=$(find $1 -type f -executable 2>/dev/null | sort -rh | head -n 10 | awk '{print $1}')


#Команда which позволяет Вам получить полный путь к приложению или другой команде,
#указав базовое имя файла в качестве опции. Это удобно, чтобы убедиться, что данное
#приложение или команда присутствуют в системе.
# Чтобы определить, установлен ли в Вашей системе perl и где он расположен, введите:
#    $ which perl [RET]
#    /usr/bin/perl


#1
#`wc -l', которая выволит количество строк, пришедших на ее вход.
#2
#du. Чтобы узнать сколько место занимает папка и её подпапки, используется опция -s.
#-a указывает на то, что нужно вычислить размер для каждого файла (включая скрытые файлы)
#3
#file предназначена для задействования одноименной утилиты, осуществляющей определение типов 
#переданных элементов файловой системы (файлов, директорий, ссылок, именованных каналов и сокетов).
#Здесь {} представляет собой место, где команда find вставляет имя каждого найденного файла. 
#Символ \; указывает на конец команды, которую нужно выполнить для каждого найденного файла.
#
#-o - это оператор "или", который объединяет условия в группе.
#Знак "+" в команде find означает, что команда du будет запущена один раз для всех найденных файлов, а не отдельно для каждого файла.